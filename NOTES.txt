Current best version is RefreqyFlex2, MAX_WRONGNESS = 5, REMAINING_WORDS_THRESHOLD = 1 with bugfix

In last run XXX
# Duplicate Letters
You guessed 'every' in 7 guesses!
You guessed 'ninny' in 7 guesses!
You guessed 'doddy' in 7 guesses!
You guessed 'doddy' in 7 guesses!
You guessed 'doddy' in 7 guesses!
You guessed 'rider' in 7 guesses!

# not sure what made these fail
You guessed 'payer' in 7 guesses!
    Predecessor had double-letter - "paper"
You guessed 'hazer' in 7 guesses!
    Predecessor had double-letter - "razer"

Seems to struggle with duplicate letters (RefreqyFlex2 doesn't deal with them very well)

# Other Strategies

## Double-letter aware frequency
Extend frequency data to have information on double/triple/etc. letters, and incorporate that into scoring.
Maybe switch to RefreqyFlex2 v2 but filter out only single-letter choices instead of double-letter choices?

### v2
#### Score
RefreqyFlex3 v2 MAX_WRONGNESS = 5 RIGHT_PLACE_MULTIPLIER = 1
  winRate: 0.992,
  averageGuesses: 4.334

#### Misses
You guessed 'bezel' in 7 guesses!
You guessed 'hazel' in 7 guesses!
You guessed 'hawky' in 8 guesses!
You guessed 'bumpy' in 7 guesses!
You guessed 'foppy' in 7 guesses!
You guessed 'manny' in 7 guesses!
You guessed 'wanny' in 7 guesses!
You guessed 'pinny' in 7 guesses!

### v3
Only score the first new occurrence of each letter, to favor a wider variety of letters over guessing double-letters that are likely.

#### Score
RefreqyFlex3 v3 MAX_WRONGNESS = 5 RIGHT_PLACE_MULTIPLIER = 2
  winRate: 0.99,
  averageGuesses: 4.299

#### Missed
-> GAME            [INFO ] You guessed 'vower' in 7 guesses!
-> GAME            [INFO ] You guessed 'roper' in 7 guesses!
-> GAME            [INFO ] You guessed 'widdy' in 7 guesses!
-> GAME            [INFO ] You guessed 'hazel' in 7 guesses!
-> GAME            [INFO ] You guessed 'javer' in 7 guesses!
-> GAME            [INFO ] You guessed 'hoppy' in 7 guesses!
-> GAME            [INFO ] You guessed 'javer' in 7 guesses!
-> GAME            [INFO ] You guessed 'awing' in 7 guesses!
-> GAME            [INFO ] You guessed 'bevel' in 7 guesses!
-> GAME            [INFO ] You guessed 'linja' in 7 guesses!

### v4
Don't score for a letter in a position we already know, and don't double-count letters we already know in the score.

#### Score
RefreqyFlex3 v4 MAX_WRONGNESS = 5 RIGHT_PLACE_MULTIPLIER = 2
  winRate: 0.992,
  averageGuesses: 4.265

#### Missed
-> GAME            [INFO ] You guessed 'hazer' in 7 guesses!
-> GAME            [INFO ] You guessed 'roper' in 7 guesses!
-> GAME            [INFO ] You guessed 'mower' in 7 guesses!
-> GAME            [INFO ] You guessed 'fuffy' in 7 guesses!
-> GAME            [INFO ] You guessed 'razer' in 7 guesses!
-> GAME            [INFO ] You guessed 'javer' in 7 guesses!
-> GAME            [INFO ] You guessed 'roper' in 7 guesses!
-> GAME            [INFO ] You guessed 'mower' in 7 guesses!

### v5
Instead of no score for a duplicate letter, give a very low score.
Better to pick a duplicate letter than something we know is not in the word!

#### Score
RefreqyFlex3 v5 MAX_WRONGNESS = 5 RIGHT_PLACE_MULTIPLIER = 2
  winRate: 0.997,
  averageGuesses: 4.25

#### Misses
-> GAME            [INFO ] You guessed 'wafer' in 7 guesses!
-> GAME            [INFO ] You guessed 'jazzy' in 7 guesses!
-> GAME            [INFO ] You guessed 'hoper' in 7 guesses!
-> GAME            [INFO ] You guessed 'hoper' in 7 guesses!

### v6
Adjust letter tracker based on possibilities.

Sometimes the limited number of possibilities let us infer things in the letter tracker, e.g. all of the possibilities
have a particular letter, sometimes in a particular position.

#### Score
RefreqyFlex3 v6 MAX_WRONGNESS = 5 RIGHT_PLACE_MULTIPLIER = 2
  winRate: 0.991,
  averageGuesses: 4.321

#### Misses
-> GAME            [INFO ] You guessed 'hazer' in 7 guesses!
-> GAME            [INFO ] You guessed 'inial' in 7 guesses!
-> GAME            [INFO ] You guessed 'viver' in 7 guesses!
-> GAME            [INFO ] You guessed 'hover' in 7 guesses!
-> GAME            [INFO ] You guessed 'mower' in 7 guesses!
-> GAME            [INFO ] You guessed 'gazel' in 7 guesses!
-> GAME            [INFO ] You guessed 'faffy' in 7 guesses!
-> GAME            [INFO ] You guessed 'poker' in 7 guesses!
-> GAME            [INFO ] You guessed 'lolly' in 7 guesses!

### Possible Enhancements

#### Enhancement: In RefreqyFlex modes, take a real guess if it's as good as a new guess
If the score of the real guess and the new guess are the same, migt as well take a real guess; alternative
use real possibility as a tiebreaker among new guesses.

#### Enhancement: In RefreqyFlex modes, take a real guess on the last guess
Instead of searching for words, if it's our last guess, might as well give it a shot.

## Maximum Discernment
When we have the list of words narrowed down, which letters would most help us discern from the remaining ones?
For example, if our possible words are: glare, blare, flare and we have xLARE, our best approach is not to try
the words serially, but to try a word with "g", "b", and "f" in it, e.g. "befog"
This is different from using frequency tables (I think).

## Avoid letters which are too popular at first (or vowels)
By starting with the most popular letters, we are left with letters that are infrequent and so hard to incorporate into
other words; often later guesses only get 1-2 new characters out of all 5.  In other words, the very popular letters
we will get naturally when guessing other words, so maybe we should start with the least popular ones?

## Conditional probability
For example, we never need to guess "q" unless "u" is in the word.  Can we encode that into a strategy somehow?
Fiture out which letters we don't need to guess because they are implied by other letters?

# Things to look into

